import tkinter as tk
import threading
import time
import random  # Simulating data collection

class LaryngophoneApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Laryngophone Recorder")

        # Start and Stop buttons
        self.start_button = tk.Button(root, text="Start", command=self.start_recording)
        self.start_button.pack(pady=10)

        self.stop_button = tk.Button(root, text="Stop", command=self.stop_recording)
        self.stop_button.pack(pady=10)

        self.recording = False  # Flag for recording
        self.data = []  # Store recorded data

    def start_recording(self):
        if not self.recording:
            self.recording = True
            self.data = []  # Clear previous data
            self.record_thread = threading.Thread(target=self.record_data)
            self.record_thread.start()

    def stop_recording(self):
        self.recording = False

    def record_data(self):
        while self.recording:
            # Simulate collecting data from the laryngophone
            sound_level = random.uniform(0, 1)  # Replace with actual microphone data
            timestamp = time.time()
            self.data.append((timestamp, sound_level))
            print(f"Recorded: {timestamp}, {sound_level}")
            time.sleep(0.1)  # Adjust based on sampling rate

        print("Recording Stopped. Data Collected:", self.data)

if __name__ == "__main__":
    root = tk.Tk()
    app = LaryngophoneApp(root)
    root.mainloop()
